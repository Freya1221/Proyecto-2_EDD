/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package clavedicotomica;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.StringReader;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.json.Json;
import javax.json.JsonArray;
import javax.json.JsonException;
import javax.json.JsonObject;
import javax.json.JsonReader;
import javax.json.JsonValue;

/**
 *
 * @author Freya Blanca, Jesús Schneider, Marcelo Pineiro
 */
public class Home extends javax.swing.JFrame {

    /**
     * Creates new form Home
     */
    ArbolBinario AB = new ArbolBinario();
    
    public Home() {
        initComponents();
        setLocationRelativeTo(null); //CEntrar ventana
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        CargarArbol = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabel1.setText("Clave Dicotomica");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 30, -1, 40));

        jLabel7.setText("Marcelo Piñeiro");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 440, -1, -1));

        jLabel8.setText("Integrantes:");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 380, -1, -1));

        jLabel9.setText("Freya Blanca");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 400, -1, -1));

        jLabel10.setText("Jesús Schneider");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 420, -1, -1));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel2.setText("Cargar Arbol");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 170, -1, -1));

        CargarArbol.setText("cargar arbol");
        CargarArbol.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CargarArbolActionPerformed(evt);
            }
        });
        jPanel1.add(CargarArbol, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 200, -1, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 580, 480));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CargarArbolActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CargarArbolActionPerformed
        JFileChooser fileChooser = new JFileChooser();   
        // Filtro para solo archivos JSON
        fileChooser.setFileFilter(new javax.swing.filechooser.FileNameExtensionFilter(
            "Archivos JSON (*.json)", "json"));

        int result = fileChooser.showOpenDialog(this);

        if (result == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();
            try (BufferedReader reader = new BufferedReader(new FileReader(selectedFile))) {

                // Leer contenido del archivo
                StringBuilder content = new StringBuilder();
                String line;
                while ((line = reader.readLine()) != null) {
                    content.append(line);
                }

                try (JsonReader jsonReader = Json.createReader(new StringReader(content.toString()))) {
                    JsonObject root = jsonReader.readObject();
                    String primeraClave = root.keySet().iterator().next();

                    JOptionPane.showMessageDialog(this,
                        "Archivo válido: " + selectedFile.getName(),
                        "Éxito",
                        JOptionPane.INFORMATION_MESSAGE);

                    // Obtener el array de árboles
                    JsonArray arbolesArray = root.getJsonArray(primeraClave);
                    for (JsonValue arbolValue : arbolesArray) {
                        JsonObject arbolJson = arbolValue.asJsonObject();
                        String nombreArbol = arbolJson.keySet().iterator().next();
                        //System.out.println("Árbol: " + nombreArbol);

                        String PreguntaAnterior = "";
                        boolean ValorAnterior = true;

                        // Obtener el array de características del árbol
                        JsonArray caracteristicasArray = arbolJson.getJsonArray(nombreArbol);
                        for (JsonValue caracteristicaValue : caracteristicasArray) {
                            JsonObject caracteristicaJson = caracteristicaValue.asJsonObject();
                            String pregunta = caracteristicaJson.keySet().iterator().next();
                            boolean respuesta = caracteristicaJson.getBoolean(pregunta);
                            //System.out.println("- " + pregunta + ": " + respuesta);

                            // Insertar la pregunta en el árbol binario
                            AB.insertar(pregunta, PreguntaAnterior, ValorAnterior);

                            // Actualizar la pregunta anterior y su valor
                            PreguntaAnterior = pregunta;
                            ValorAnterior = respuesta;
                        }

                        // Insertar el nombre del árbol como un nodo final
                        AB.insertar(nombreArbol, PreguntaAnterior, ValorAnterior);
                        
                        
                        Nodo nodoEspecie = AB.buscar(AB.getRaiz(), nombreArbol);
            
                        // Insertar en la tabla hash (si se encontró el nodo)
                        if (nodoEspecie != null) {
                            AB.agregarEspecieATabla(nombreArbol, nodoEspecie);
                        }
                    }

                    
                    AB.recorrerPreorden(AB.getRaiz());
                    
                    Inicio i = new Inicio(AB);
                    i.setVisible(true);
                    this.setVisible(false);
                }

            } catch (JsonException ex) {
                JOptionPane.showMessageDialog(this,
                    "Error en JSON: " + ex.getMessage(),
                    "Error de sintaxis",
                    JOptionPane.ERROR_MESSAGE);
                
                
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this,
                    "Error al leer archivo: " + ex.getMessage(),
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            } 
        }
    }//GEN-LAST:event_CargarArbolActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Home().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CargarArbol;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
